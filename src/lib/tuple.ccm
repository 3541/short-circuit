/*
 * TUPLE -- Extra utilities for std::tuple.
 *
 * Copyright (c) 2024, Alex O'Brien <3541@3541.website>
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of
 * the MPL was not distributed with this file, you can obtain one at http://mozilla.org/MPL/2.0/.
 */

module;

#include <concepts>
#include <ostream>
#include <tuple>

export module sc.lib.tuple;
import sc.lib.stream;

export namespace sc::lib {

template <Streamable... Ts>
std::ostream& operator<<(std::ostream& stream, Stream<std::tuple<Ts...> const&> tuple) {
    stream << '(';
    std::apply([&](auto&&... args) { ((stream << stream_view(args) << ", "), ...); },
               tuple.m_inner);
    return stream << ')';
}

template <Streamable T, Streamable U>
std::ostream& operator<<(std::ostream& stream, Stream<std::pair<T, U> const&> pair) {
    return stream << '(' << stream_view(pair.m_inner.first) << ", "
                  << stream_view(pair.m_inner.second) << ')';
}

} // namespace sc::lib
